{"version":3,"sources":["component/Header.js","component/Filter.js","actions/actions.js","actions/actionType.js","component/ListCard.js","component/Accueil.js","component/Cart.js","component/Routing.js","services/serviceProduct.js","component/Product.js","services/serviceUser.js","component/User.js","component/Admin.js","component/Register.js","App.js","serviceWorker.js","reducer/reducers.js","reducer/localStorage.js","index.js"],"names":["NavbarMenu","props","state","data","listArtcile","filterSearch","handleChange","bind","this","products","setState","map","value","index","ListGroup","Item","onClick","history","push","key","e","arrayFilter","filter","wordSearching","target","toLowerCase","word","article","includes","Navbar","collapseOnSelect","className","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Form","Group","controlId","Row","Control","onChange","type","placeholder","style","height","to","Button","localStorage","getItem","clear","React","Component","connect","product","withRouter","Filter","list","activeCategory","sortBy","categoryFilter","setItem","arrayCheckIfExist","count","z","length","i","category","undefined","action","removeItem","find","Label","as","showUser","showProduct","addProductInCart","ListCard","params","addCart","nextProps","endPoint","displayAll","displayByCategory","displayByArticlesSearch","displayBySort","displayOneArticle","displayCart","Card","width","Img","variant","src","window","location","origin","photo","Body","_id","Text","price","describe","Container","Col","lg","CardProduct","dataSort","sort","a","b","reverse","describeProduct","cart","arrayCart","console","log","quantity","actions","checkIfExist","newArray","splice","dispatch","Accueil","displayArticle","Header","fluid","xs","sm","md","User","listCart","process","deleteArticleInCart","deleteArticle","Routing","match","Cart","routeToComponent","allDataProducts","axios","get","pictureGet","files","name","addArticle","preventDefault","namePic","post","updateProduct","put","deleteProduct","delete","Product","displayThead","updateListArticle","serviceProduct","onSubmit","defaultValue","listUpdate","tab","obj","indexOf","formAddProduct","createUser","mail","password","allDataUsers","datasUsers","checkUser","check","updateUser","deleteUser","datas","listUser","updateListUser","sendUpdate","removeUser","users","dataUsers","serviceUser","user","Admin","buttonModify","bg","reload","Register","sendForm","page","path","pathname","Users","Products","test","alert","email","getUser","ref","register","bindActionCreators","App","exact","component","Boolean","hostname","reducer_user","newState","reducer_product","reducer_cart","userApp","combineReducers","saveState","serializedState","JSON","stringify","persistedState","parse","err","loadState","store","createStore","subscribe","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3814f61.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav, Button, Form, ListGroup } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass NavbarMenu extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state = {\r\n            data: [],\r\n            listArtcile:[],\r\n            filterSearch: []\r\n        }\r\n\r\n        this.handleChange= this.handleChange.bind(this)\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let products = await this.props.products;\r\n        this.setState({data: products});\r\n        this.listArtcile();\r\n    }\r\n\r\n    async listArtcile(){\r\n        \r\n        let listArtcile = await this.state.filterSearch.map((value, index) => {\r\n            \r\n            return(\r\n                \r\n                <ListGroup.Item onClick={() => {this.props.history.push(`/searcharticle/${value}`); this.setState({listArtcile: []})}} key={index}>{value}</ListGroup.Item>\r\n            )\r\n\r\n        });\r\n        \r\n        this.setState({listArtcile: listArtcile});\r\n    }\r\n\r\n    // Active when i press a key in my input\r\n    async handleChange(e){\r\n        let arrayFilter = [];\r\n\r\n        // Check if the letter entered her inside     \r\n        await this.state.data.filter(value => {\r\n            let wordSearching = e.target.value.toLowerCase()\r\n            let word = value.article.toLowerCase();\r\n            let findWord = word.includes(wordSearching);\r\n            \r\n            if(findWord){\r\n                return arrayFilter.push(word)\r\n            }\r\n\r\n        })\r\n         this.setState({filterSearch: arrayFilter});\r\n        this.listArtcile();\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n                <Navbar collapseOnSelect className=\"pl-5\" expand=\"lg\" expand=\"md\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand className=\"ml-1\" href=\"/\">Fou Market</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        {/* <Nav className=\"mr-auto\" /> */}\r\n                        <Nav className=\" mt-3 mr-auto w-100\">>\r\n                                <Form.Group className=\"w-100\" controlId=\"Search\">\r\n                                    <Form.Row>\r\n                                        <Form.Control onChange={this.handleChange} type=\"text\" placeholder=\"Search...\" />\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <ListGroup className=\"w-100 position-absolute overflow-auto\" style={{height: \"100px\", 'zIndex':\"1\"}}>\r\n                                            {this.state.listArtcile}\r\n                                        </ListGroup>\r\n                                    </Form.Row>\r\n                                </Form.Group>\r\n                        </Nav>\r\n                        <Nav>\r\n                            <Link to=\"/cart\" ><Button>Cart</Button></Link>\r\n                        </Nav>\r\n                        <Nav >\r\n                            { localStorage.getItem(\"user\") === null &&\r\n                            <div>\r\n                                <Link to=\"/signin\"><Button>Login</Button></Link>\r\n                            </div>\r\n                                \r\n                            }\r\n                            { localStorage.getItem(\"user\") !== null &&\r\n                                <Link to=\"/\"><Button onClick={() => {localStorage.clear()}}>Deconnect</Button></Link>\r\n                            }\r\n                            \r\n                        </Nav>\r\n                                           \r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state)  {\r\n    return {\r\n        products: state.product\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(NavbarMenu));","import React from \"react\";\r\nimport { Form, ListGroup } from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass Filter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            list: [],\r\n            activeCategory: false\r\n        }\r\n\r\n        this.activeCategory = this.activeCategory.bind(this);\r\n        this.sortBy = this.sortBy.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n       let products = await this.props.products;\r\n       this.setState({data: products});\r\n       this.categoryFilter();\r\n       localStorage.setItem('categoryFilter', \"all\");\r\n    }\r\n\r\n    async categoryFilter(){\r\n        let arrayCheckIfExist = [];\r\n        let count = 0;\r\n        let data = await this.state.data;\r\n        \r\n        //Use loops for check the duplicate\r\n         for(var z = 0; z < data.length; z++){\r\n            for(var i = 0; i < data.length; i++){\r\n                //check if the category in the new array, and nor undefined\r\n                if(data[z].category !== arrayCheckIfExist[i] && data[z].category !== undefined  && count === 0){\r\n                    arrayCheckIfExist.push(data[z].category);\r\n                }\r\n                count++\r\n            }\r\n            count = 0\r\n        }\r\n        \r\n        //loop category for card \r\n       let list =  arrayCheckIfExist.map((category, index) =>{\r\n            return (\r\n                <ListGroup.Item action onClick={() => {this.activeCategory(category);}} key={index}> {category}</ListGroup.Item>\r\n            );\r\n       })\r\n            \r\n        this.setState({list: list})\r\n    }\r\n\r\n    //Function send to new route with new params\r\n    async activeCategory(category){\r\n        localStorage.removeItem('categoryFilter');\r\n        localStorage.setItem('categoryFilter', category);\r\n        this.props.history.push(`/filter/${category}`)\r\n    }\r\n\r\n    //Function send to new route the sort of items\r\n    sortBy(e){\r\n        let find = e.target.value;\r\n        this.props.history.push(`/sort/${find}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Form className=\"mt-3\">\r\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                    <Form.Label>Filter</Form.Label>\r\n                    <Form.Control onClick={this.sortBy} as=\"select\">\r\n                        <option>default</option>\r\n                        <option>low</option>\r\n                        <option>high</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Form>\r\n            <ListGroup>\r\n                <ListGroup.Item action onClick={() => {this.activeCategory('all');}}> Tout</ListGroup.Item>\r\n                {this.state.list}\r\n            </ListGroup>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Get state in the store\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.product\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(withRouter(Filter));","import * as actionType from './actionType'\r\n\r\nexport const showUser = (data) => ({\r\n        type: actionType.SHOW_USER,\r\n        data: data\r\n    })\r\n\r\n\r\nexport const showProduct = (data) => ({\r\n    type: actionType.SHOW_PRODUCT,\r\n    data: data\r\n})\r\n\r\nexport const showCart = (data) => ({\r\n    type: actionType.SHOW_CART,\r\n    data: data\r\n})\r\n\r\nexport const addProductInCart = (data) => ({\r\n    type: actionType.ADD_CART,\r\n    data: data\r\n})","export const SHOW_USER = \"SHOW_USER\"  ;\r\nexport const SHOW_PRODUCT = \"SHOW_PRODUCT\";\r\nexport const SHOW_CART = \"SHOW_CART\"  ;\r\nexport const ADD_CART = \"ADD_CART\"  ;","import React  from \"react\";\r\nimport {Card, Button, Container, Row, Col} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { addProductInCart } from \"../actions/actions\";\r\nimport {connect} from \"react-redux\";\r\n \r\nclass ListCard extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            list: [],\r\n            params: this.props.params,\r\n        }\r\n        this.addCart = this.addCart.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        this.list(await this.props.products, this.props.params)\r\n    }\r\n\r\n    async componentWillReceiveProps(nextProps){\r\n        this.list(await this.props.products, nextProps.params)\r\n\r\n    }\r\n\r\n    async list(data, endPoint){  \r\n        let list;\r\n        switch(endPoint.type){\r\n            case \"all\":\r\n                list = this.displayAll(data, endPoint)\r\n            break;\r\n            case \"filter\":\r\n                list = this.displayByCategory(data, endPoint)\r\n            break;\r\n            case \"searcharticle\":\r\n                list = this.displayByArticlesSearch(data, endPoint)\r\n            break;\r\n            case \"sort\":\r\n                list = this.displayBySort(data, endPoint)\r\n            break;\r\n            case \"article\":\r\n                list = this.displayOneArticle(data, endPoint)\r\n            break;\r\n            case \"cart\":\r\n                list = this.displayCart(data)\r\n            break;\r\n            default:\r\n            return null\r\n    \r\n        }\r\n        this.setState({list: await list})\r\n    }\r\n    \r\n    \r\n    CardProduct (value, index) {\r\n        return (\r\n            <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\r\n                <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n                <Card.Body>\r\n                    <Link  to={\"/article/\"+value._id} className=\"p-0 text-dark\">{value.article}</Link>\r\n                    <Card.Text>{value.price}$</Card.Text>\r\n                    <Card.Text>description: {value.describe}</Card.Text>\r\n                    <Button onClick={() => {this.addCart(value)}} variant=\"primary\">Add cart</Button>\r\n                    \r\n                </Card.Body>\r\n            </Card>\r\n        )  \r\n    }\r\n    \r\n    describeProduct(value, index){\r\n        return (\r\n            <Container className=\"border border-secondary mt-3 mr-3\" key={index} >\r\n                <Col></Col>\r\n                <Row>\r\n                    <Col lg={4}><img src={window.location.origin + \"/img/\" + value.photo} style={{ width: '15em' }}/></Col>\r\n                    <Col>\r\n                        <Row>\r\n                            <Col lg={12}><p>{value.article}</p></Col>\r\n                            <Col lg={12}><p>{value.describe}</p></Col>\r\n                            <Col>                \r\n                                <Button  variant=\"primary\">Add cart</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n    \r\n        )  \r\n    }\r\n    \r\n    async displayAll(data, endPoint){\r\n        let list = await data.map((value, index) => {\r\n        if(endPoint.category === (undefined || \"all\")){\r\n            return this.CardProduct(value, index);    \r\n            }\r\n        });\r\n        return list;\r\n    }\r\n    \r\n    async displayByCategory(data, endPoint){\r\n        let list = await data.map((value, index) => {\r\n            \r\n                if(endPoint.category === value.category){\r\n                    return this.CardProduct(value, index);     \r\n                }\r\n                else if(endPoint.category === \"all\"){\r\n                    return this.CardProduct(value, index);     \r\n                }\r\n            });\r\n    \r\n            return list\r\n    }\r\n    \r\n    async displayByArticlesSearch(data, endPoint){\r\n        let list = await data.map((value, index) => {\r\n                if(endPoint.category === value.article.toLowerCase()){\r\n                    return this.CardProduct(value, index);     \r\n                }\r\n            });\r\n    \r\n            return list;\r\n    }\r\n    \r\n    async displayBySort(data, endPoint){\r\n        let dataSort;\r\n        let list;\r\n            dataSort = await data;\r\n            let sort = await data.sort((a, b) =>  a.price - b.price );\r\n    \r\n            if(endPoint.category === \"low\" ) {dataSort = sort} \r\n            else if(endPoint.category === \"high\") {dataSort = sort.reverse()}\r\n        \r\n             list = await dataSort.map((value, index) => {\r\n                return this.CardProduct(value, index);  \r\n            });\r\n        \r\n    \r\n        return list\r\n    }\r\n    \r\n    async displayOneArticle(data, endPoint){\r\n        let list = await data.map((value, index) => {\r\n                if(endPoint.category === value._id){\r\n                    return this.describeProduct(value, index);     \r\n                }\r\n            });\r\n            return list;\r\n    }\r\n    \r\n    async displayCart(data){\r\n        let list = await data.map((value, index) => {\r\n                    return this.describeProduct(value, index);     \r\n                \r\n            });\r\n            return list;\r\n    }\r\n\r\n    async addCart(value){\r\n        let arrayCart = await this.props.cart;\r\n        console.log(arrayCart)\r\n        arrayCart.push({_id: value._id, article: value.article, price: value.price, quantity: 0});\r\n\r\n        // this.checkIfExist(arrayCart)\r\n        this.props.actions(this.checkIfExist(arrayCart))\r\n\r\n        // this.props.actions(arrayCart)\r\n        // console.log(await this.props.cart);\r\n    }\r\n\r\n    checkIfExist(arrayCart){\r\n        let newArray = arrayCart;\r\n\r\n        for( var i = 0 ;i < arrayCart.length; i++){\r\n                if (arrayCart[i]._id === arrayCart[arrayCart.length - 1]._id && newArray[i].quantity > 0){\r\n                    \r\n                    newArray[i].quantity += 1;\r\n                    newArray.splice((arrayCart.length - 1), 1);\r\n                    return newArray;\r\n                }\r\n\r\n                if ( arrayCart[i]._id === arrayCart[arrayCart.length - 1]._id && newArray[arrayCart.length - 1].quantity === 0){\r\n            \r\n                    newArray[i].quantity += 1;\r\n                    return newArray;\r\n\r\n                }\r\n        }\r\n        return newArray;\r\n    }\r\n\r\n    render(){\r\n        return this.state.list\r\n    }\r\n    \r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n      products: state.product,\r\n      cart: state.cart,\r\n\r\n    };\r\n  }\r\n\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { actions: (data) => {dispatch(addProductInCart(data))} }\r\n  }\r\n\r\n// export default Cart;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListCard)\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../style/Acceuil.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport Header from \"./Header\";\r\nimport Filter from \"./Filter\";\r\nimport ListCard from \"./ListCard\";\r\n\r\n\r\n\r\nclass Accueil extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            displayArticle: [],\r\n            params: this.props.params,\r\n        }\r\n    }\r\n\r\n    async componentWillReceiveProps(nextProps) {\r\n        this.setState({params: nextProps.params});\r\n    }\r\n\r\n    \r\n\r\n    \r\n    render() { \r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col xs=\"2\" sm=\"2\" md=\"3\" lg=\"2\" className=\"border border-secondary mt-3 ml-3\"><Filter/></Col>\r\n                        <Col><div className=\"flex\"><ListCard params={this.state.params}></ListCard></div></Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.product\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(Accueil);","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { addProductInCart } from '../actions/actions';\r\nimport { Container, Card, Button,  Row, Col} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass User extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            list: [],\r\n            cart: this.props.cart\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.listCart();\r\n    }\r\n\r\n    async listCart(){\r\n        console.log(process.env);\r\n        let cart = await this.state.cart;\r\n        let list = cart.map((value, index) => {\r\n            return(\r\n                <Col key={index} sm={4} md={2}>\r\n                    <Card className=\"border border-secondary mt-3 mr-3\"  style={{ width: '13em' }}>\r\n                        <Card.Img variant=\"pic\" src={process.env.PUBLIC_URL + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n                        <Card.Body>\r\n                            <Link  to={\"/article/\"+value._id} className=\"p-0 text-dark\">{value.article}</Link>\r\n                            <Card.Text>{value.price}$</Card.Text>\r\n                            <Card.Text>Quantity: {value.quantity}</Card.Text>\r\n                            <Button onClick={() => {this.deleteArticleInCart(value)}} variant=\"primary\">Delete</Button>\r\n                            \r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n       });\r\n       \tconsole.log(list);\r\n       this.setState({list: list})\r\n\r\n    }\r\n        \r\n    \r\n    \r\n    render(){\r\n        console.log(this.state.list)\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    {this.state.list}           \r\n                </Row>\r\n            </Container>\r\n            \r\n        )\r\n        \r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n      cart: state.cart\r\n    };\r\n  }\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { deleteArticle: (data) => {dispatch(addProductInCart(data))} }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);","import React from \"react\";\r\nimport Accueil from \"./Accueil\";\r\nimport Cart from \"./Cart\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\n//Routing\r\n\r\nclass Routing extends React.Component{  \r\n    routeToComponent(){\r\n        \r\n        const params = this.props.match.params;\r\n        console.log(params)\r\n        if(params.type === \"filter\" ){\r\n            return <Accueil params={params}/>         \r\n        }\r\n        else if(params.type === \"searcharticle\"){\r\n            return <Accueil params={params}/>\r\n        }\r\n        else if(params.type === \"sort\"){\r\n            return <Accueil params={params}/>\r\n        }\r\n        else if(params.type === \"article\"){\r\n            return <Accueil params={params}/>\r\n        }\r\n        else if(params.type === \"cart\"){\r\n            return <Cart params={params}/>\r\n        }\r\n        else{\r\n            return <Accueil params={{category:\"all\", type:\"all\"}}/>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.routeToComponent()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(Routing)","import axios from \"axios\";\r\n\r\nexport const allDataProducts = async () => {\r\n    let products = await axios.get(\"http://localhost:1234/product/read\");\r\n    return products;\r\n};\r\n\r\nlet pictureGet = (e) => {\r\n    if(e.target.photo.type === 'file'){\r\n        \r\n        if(e.target.photo.files[0] !== undefined){\r\n            return e.target.photo.files[0].name;\r\n        }\r\n    }\r\n    if(e.target.photo.type === 'text'){\r\n            return e.target.photo.name.value;\r\n    }\r\n}\r\n\r\nexport const addArticle = async (e) => {\r\n    e.preventDefault();\r\n        let namePic = pictureGet(e);\r\n        let data = {\r\n            article: e.target.article.value,\r\n            describe: e.target.describe.value,\r\n            price: e.target.price.value,\r\n            quantity: e.target.quantity.value,\r\n            photo: namePic,\r\n            category: e.target.category.value\r\n            \r\n        }\r\n\r\n        await axios.post(\"http://localhost:1234/product/create\", data);\r\n}\r\n\r\nexport const updateProduct = async (e) => {\r\n    e.preventDefault();\r\n    let namePic = pictureGet(e);\r\n    let data = {\r\n        id: e.target.id.value,\r\n        article: e.target.article.value,\r\n        describe: e.target.describe.value,\r\n        price: e.target.price.value,\r\n        quantity: e.target.quantity.value,\r\n        photo: namePic,\r\n        category: e.target.category.value\r\n    }\r\n    await axios.put(\"http://localhost:1234/product/update\", data);\r\n}\r\n\r\n//data is id of products\r\nexport const deleteProduct = async (data) => {\r\n    await axios.delete(\"http://localhost:1234/product/delete\", {data});\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport { showProduct } from \"../actions/actions\";\r\nimport * as serviceProduct from  \"../services/serviceProduct\";\r\nimport {Button, Form} from 'react-bootstrap';\r\n\r\nclass Product extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            listArtcile:[],\r\n            data:[],\r\n            displayThead:true\r\n        }\r\n        \r\n        this.addArticle = this.addArticle.bind(this);\r\n        this.updateListArticle = this.updateListArticle.bind(this);\r\n        this.updateProduct = this.updateProduct.bind(this);\r\n        this.deleteProduct = this.deleteProduct.bind(this);\r\n    }\r\n    async componentDidMount(){\r\n        let products = await this.props.products;\r\n        this.setState({data: products});\r\n        this.listArtcile();\r\n        \r\n    }\r\n\r\n     async listArtcile(){\r\n        let listArtcile = await this.state.data.map((value, index) => {\r\n            return(\r\n                <tr key={index}>\r\n                    <td>{value._id}</td>\r\n                    <td>{value.article}</td>\r\n                    <td>{value.describe}</td>\r\n                    <td>{value.price}</td>\r\n                    <td>{value.quantity}</td>\r\n                    <td>{value.photo}</td>\r\n                    <td>{value.category}</td>\r\n                    <td><button onClick={this.updateListArticle}>Modify</button></td>\r\n                    <td><button onClick={() => {this.deleteProduct(value._id)}}>Delete</button></td>\r\n                </tr>\r\n            )\r\n        })\r\n        \r\n        this.setState({listArtcile: listArtcile, displayThead: true});\r\n    }\r\n\r\n    //Add article in the service who will comunnicate with nodejs\r\n    async addArticle(e){\r\n        await serviceProduct.addArticle(e)\r\n        let products = await serviceProduct.allDataProducts();\r\n        await this.props.dispatch(showProduct(products.data));\r\n        this.setState({data: products.data});\r\n        this.listArtcile();\r\n\r\n    }\r\n\r\n    //update article in the service who will comunnicate with nodejs\r\n    async updateListArticle(){\r\n        let listUpdate = await this.state.data.map((value, index) => {\r\n            return(\r\n                <tr key={index}>\r\n                    <td>\r\n                        <form onSubmit={this.updateProduct}>\r\n                            <label>id: <input name=\"id\" type=\"text\" placeholder={value._id} defaultValue={value._id}/></label>\r\n                            <label>article: <input name=\"article\" type=\"text\" placeholder={value.article} defaultValue={value.article}/></label>\r\n                            <label>describe: <input name=\"describe\" type=\"number\" placeholder={value.describe} defaultValue={value.describe}/></label>\r\n                            <label>price: <input name=\"price\" type=\"number\" placeholder={value.price} defaultValue={value.price}/></label>\r\n                            <label>quantity: <input name=\"quantity\" type=\"number\" placeholder={value.quantity} defaultValue={value.quantity}/></label>\r\n                            <label>photo: \r\n                                { value.category !== null || undefined  ?\r\n                                    <input name=\"photo\" type=\"file\"/>\r\n                                :\r\n                                    <input name=\"photo\" type=\"text\" defaultValue={value.photo}/>\r\n                                }\r\n                            </label>\r\n                            <label>category: <input name=\"category\" type=\"text\" defaultValue={value.category}/></label>\r\n                            <input type=\"submit\" value=\"Update\"/>\r\n                            <input type=\"submit\" value=\"cancel\"/>\r\n                        </form>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        });\r\n\r\n        this.setState({listArtcile:listUpdate, displayThead: false});\r\n    }\r\n\r\n    //updated article in real-time with wich we get the array\r\n    async updateProduct(e){\r\n        serviceProduct.updateProduct(e);\r\n        let tab = [e.target.id.value]\r\n        for(var i = 0; i < this.state.data.length;i++){\r\n            var obj = this.state.data[i];\r\n            if(tab.indexOf(obj._id) !== -1){\r\n                obj.article = e.target.article.value;\r\n                obj.describe = e.target.describe.value;\r\n                obj.price = e.target.price.value;\r\n                obj.quantity = e.target.quantity.value;\r\n                obj.photo = e.target.photo.value;\r\n                obj.category = e.target.category.value;\r\n            }         \r\n        }\r\n        this.listArtcile();\r\n    }\r\n    \r\n    //Send article to the service who get and send to nodejs for the treatment of delete and the most is what he make the update in real time\r\n     async deleteProduct(id){\r\n        let data = {\r\n            id: id\r\n        }\r\n\r\n        let tab = [id]\r\n        \r\n        //Delete in real time\r\n        for(var i = 0; i < this.state.data.length;i++){\r\n            var obj = this.state.data[i];\r\n            if(tab.indexOf(obj._id) !== -1){\r\n               this.state.data.splice(i,1);\r\n            }\r\n        }\r\n\r\n        await this.props.dispatch(showProduct(this.state.data));\r\n        this.setState({data: this.state.data});\r\n        this.listArtcile();\r\n        serviceProduct.deleteProduct(data);\r\n    }\r\n\r\n    formAddProduct(){\r\n        return(\r\n            <div>\r\n                <Form onSubmit={this.addArticle}>\r\n                    <Form.Group>\r\n                        <Form.Label>Article</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"article\" placeholder=\"Enter article\" />\r\n                        <Form.Label>Describe</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"describe\" placeholder=\"Enter describe\" />\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"price\" placeholder=\"Enter price\" />\r\n                        <Form.Label>Quantity</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"quantity\" placeholder=\"Enter quantity\" />\r\n                        <Form.Label>Photo</Form.Label>\r\n                        <Form.Control type=\"file\" name=\"photo\" placeholder=\"Enter Photo\" />\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"category\" placeholder=\"Enter category\" />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Send</Button>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.formAddProduct()}\r\n                <table>\r\n                {this.state.displayThead &&\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>article</th>\r\n                            <th>describe</th>\r\n                            <th>price</th>\r\n                            <th>quantity</th>\r\n                            <th>photo</th>\r\n                            <th>category</th>\r\n                        </tr>\r\n                        \r\n                    </thead>}\r\n                    <tbody>\r\n                        {this.state.listArtcile}\r\n                    </tbody>\r\n                </table>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapstateToProps(state){\r\n    return { products: state.product};   \r\n}\r\n\r\nexport default connect(mapstateToProps, null)(Product)\r\n","import axios from \"axios\"\r\n\r\nexport const createUser = async (e) => {\r\n    e.preventDefault();\r\n        \r\n    let data = {\r\n        mail: e.target.mail.value,\r\n        password: e.target.password.value\r\n    }\r\n     \r\n     await axios.post(\"http://localhost:1234/loggin/create\", data);\r\n}\r\n\r\nexport const allDataUsers = async () => {\r\n    let datasUsers = await axios.get(\"http://localhost:1234/loggin/read\"); \r\n    return datasUsers;\r\n }\r\n\r\n export const checkUser = async (e) => {\r\n    let data = {\r\n        mail: e.target.mail.value,\r\n        password: e.target.password.value\r\n    }\r\n    let check = await axios.post(\"http://localhost:1234/loggin/verify\", data);\r\n    if(check){\r\n        localStorage.setItem('user', check.data);\r\n        return check.data;\r\n    }\r\n    return null;\r\n }\r\n\r\n export const updateUser = async (e) => {\r\n    e.preventDefault();\r\n    let data = { \r\n        id: e.target.id.value,\r\n        password: e.target.password.value\r\n        \r\n    }\r\n    await axios.put(\"http://localhost:1234/loggin/update\", data);\r\n }\r\n\r\n export const deleteUser = async (data) => {\r\n    await axios.delete(\"http://localhost:1234/loggin/delete\", {data});\r\n }","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport { showUser } from '../actions/actions';\r\nimport * as serviceUser from \"../services/serviceUser\";\r\n\r\n\r\nclass User extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            datas: [],\r\n            listUser:[]\r\n        }\r\n\r\n        this.listUser = this.listUser.bind(this);\r\n        this.updateListUser = this.updateListUser.bind(this);\r\n        this.sendUpdate = this.sendUpdate.bind(this);\r\n        this.removeUser = this.removeUser.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let users = await this.props.users;\r\n        this.setState({datas:users});\r\n        this.listUser();\r\n    }\r\n\r\n    async listUser(){\r\n        \r\n        let list =  await this.state.datas.map((value, index) => { \r\n            return (\r\n                    \r\n                    <tr key={index}>\r\n                        <th>{value._id}</th>\r\n                        <th>{value.mail}</th>\r\n                        <td>\r\n                            <button onClick={this.updateListUser}>Modify</button>\r\n                        </td>\r\n                        <td>\r\n                            <button onClick={() => {this.removeUser(value._id)}}>Delete</button>\r\n                        </td>\r\n                    </tr>\r\n                        \r\n                );\r\n            });\r\n            this.setState({listUser:list});\r\n    }\r\n\r\n    async removeUser(id){\r\n        let data = {\r\n            id: id\r\n        }\r\n        var tab = [id];\r\n        let dataUsers = this.state.datas;\r\n        for (var i = 0; i < dataUsers.length; i++) {\r\n            var obj = dataUsers[i];\r\n\r\n            if (tab.indexOf(obj._id) !== -1) {\r\n                dataUsers.splice(i, 1);\r\n            }\r\n        }\r\n        \r\n        this.props.actions(dataUsers);\r\n        this.setState({datas: dataUsers});\r\n        this.listUser();\r\n        serviceUser.deleteUser(data);\r\n    }\r\n\r\n    async updateListUser(){\r\n       \r\n        let list =  await this.state.datas.map((value, index) => { \r\n            return (\r\n                    <tr key={index}>\r\n                        <th>{value._id}</th>\r\n                        <th>{value.mail}</th>\r\n                        <td>\r\n                            <form onSubmit={(e) => {this.sendUpdate(e);this.listUser();}}>\r\n                                <input  type=\"hidden\" defaultValue= {value._id} name=\"id\"/>  \r\n                                <input  type=\"text\"  name=\"password\"/>\r\n                                <input  type=\"submit\"  value=\"Update\"/>    \r\n                            </form>\r\n                            \r\n                        </td>\r\n                    </tr>\r\n                );\r\n            });\r\n            this.setState({listUser:list});\r\n    }\r\n\r\n    async sendUpdate(e){\r\n        serviceUser.updateUser(e)\r\n    }\r\n\r\n   \r\n    render(){\r\n        return(\r\n            <div>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Id</th>\r\n                            <th>Name</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {this.state.listUser}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {\r\n      users: state.user\r\n    };\r\n  }\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return { actions: (data) => {dispatch(showUser(data))} }\r\n}\r\n  export default connect(mapStateToProps, mapDispatchToProps)(User);","import React from 'react';\r\nimport Product from './Product';\r\nimport User from './User';\r\nimport { Navbar, Button, Nav  } from 'react-bootstrap';\r\n\r\n\r\nclass Admin extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            buttonModify: false // for choice the type of panel user or product\r\n        }\r\n    }\r\n\r\n    render(){\r\n                return(\r\n            <div>\r\n                {this.state.buttonModify === true ?\r\n                    <div>\r\n                        <Navbar bg=\"dark\" variant=\"dark\">\r\n                            <Navbar.Toggle />\r\n                            <Navbar.Brand>Mode Admin</Navbar.Brand>\r\n                            <Nav className=\"mr-auto\"></Nav>\r\n                            <Nav>\r\n                                <Button onClick={() => this.setState({buttonModify:false})}>Panel products</Button>\r\n                                <Button onClick={() => {localStorage.clear();window.location.reload();}}>Deconnect</Button>\r\n                            </Nav>\r\n                        </Navbar>\r\n                        <User/>\r\n                    </div>\r\n                :\r\n                <div>\r\n                    <Navbar bg=\"dark\" variant=\"dark\">\r\n                        <Navbar.Toggle />\r\n                        <Navbar.Brand>Mode Admin</Navbar.Brand>\r\n                        <Nav className=\"mr-auto\"></Nav>\r\n                        <Nav>\r\n                            <Button onClick={() => this.setState({buttonModify:true})}>Panel users</Button>\r\n                            <Button onClick={() => {localStorage.clear();window.location.reload();}}>Deconnect</Button>\r\n                        </Nav>\r\n                    </Navbar>\r\n                    <Product/>\r\n                </div>\r\n                }\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Container, Row, Button, Col, Form} from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Admin from './Admin';\r\nimport{connect} from \"react-redux\";\r\nimport { showUser, showProduct } from '../actions/actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as serviceUser from \"../services/serviceUser\";\r\nimport * as serviceProduct from \"../services/serviceProduct\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass Register extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.sendForm = this.sendForm.bind(this);\r\n        this.connect = this.connect.bind(this);\r\n\r\n        \r\n        this.state = {\r\n            page: this.props.path.pathname,\r\n            mail:\"\",\r\n            password:\"\",\r\n            datasUsers: [],\r\n            check:\"\"\r\n\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let Users = await serviceUser.allDataUsers();\r\n        let Products = await serviceProduct.allDataProducts();\r\n        \r\n        this.props.dispatch(showUser(Users.data));\r\n        this.props.dispatch(showProduct(Products.data));\r\n            \r\n        this.setState({datasUsers: Users.data});\r\n        \r\n    }\r\n\r\n   async sendForm(e){\r\n    if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(e.target.mail.value))\r\n    {\r\n        serviceUser.createUser(e);\r\n        this.setState({page: \"login\", \r\n                     mail: e.target.mail.value, \r\n                     password: e.target.password.value});\r\n        alert(\"Created\");\r\n        window.location.reload();\r\n    }else{\r\n        alert(\"Veuillez entrer une adress valide\")\r\n    }\r\n       \r\n    }\r\n\r\n    \r\n\r\n    async connect(e){\r\n        // console.log(/^\\w{8,12}/.test(e.target.password.value))\r\n        // if(/^\\w+(\\.\\w{8,12})+$/.test(e.target.password.value)){\r\n        //     alert(\"toto\")\r\n        // }\r\n        e.preventDefault();\r\n        if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(e.target.mail.value))\r\n        {\r\n            let email = e.target.mail.value;\r\n            let getUser = await serviceUser.checkUser(e);\r\n            this.setState({page: null, check: getUser});\r\n            if(email !== \"admin@admin.com\"){\r\n                this.props.history.push(\"/\")\r\n            }\r\n        }else{\r\n            alert(\"veuillew entrez une adresse valide \")\r\n        }\r\n        \r\n    }\r\n\r\n    register(){\r\n      return ( \r\n      <div> \r\n          {this.state.page === \"register\" && localStorage.getItem(\"user\") === null &&\r\n            <Col>\r\n                <Form className=\"mb-3\" onSubmit={this.sendForm}>\r\n                    <Form.Group>\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"mail\" ref=\"mail\" placeholder=\"Enter email\" />\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"password\" ref=\"password\" placeholder=\"Enter pass\" />\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" name=\"passwordVerif\" ref=\"passwordVerif\" placeholder=\"Enter pass\" />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Envoyer</Button>\r\n                </Form>\r\n                <Button type=\"button\" onClick={() => { this.setState({page: \"signin\"})}}>Login</Button>\r\n                <Link to=\"/\"><Button>Accueil</Button></Link>\r\n            </Col>\r\n          }\r\n\r\n          {this.state.page === \"signin\" && localStorage.getItem(\"user\") === null && \r\n                <Col>\r\n                    <Form className=\"mb-3\" onSubmit={this.connect}>\r\n                        <Form.Group controlId=\"form\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"mail\" ref=\"mail\" placeholder=\"Enter email\" />\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" name=\"password\" ref=\"password\" placeholder=\"Enter pass\" />\r\n                        </Form.Group>\r\n                        <Button type=\"submit\">Envoyer</Button>\r\n                    </Form>\r\n                    <Button type=\"button\"  onClick={() => { this.setState({page: \"register\"})}}>Register</Button>\r\n                    <Link to=\"/\"><Button>Accueil</Button></Link>\r\n                </Col>\r\n            }\r\n            \r\n            {localStorage.getItem(\"user\") === \"admin@admin.com\" && \r\n                <Col>\r\n                    <Admin/>\r\n                </Col>\r\n            }\r\n        </div>)\r\n        \r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                <Container>\r\n                    <Row className=\"justify-content-md-center\">\r\n                        {this.register()}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return { \r\n        user: bindActionCreators(showUser, dispatch),\r\n        product: bindActionCreators(showProduct, dispatch)\r\n    }\r\n  }\r\n  \r\n  export default connect(mapDispatchToProps)(withRouter(Register));","import React from 'react';\r\nimport Routing from \"./component/Routing\"\r\nimport Register from \"./component/Register\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport {Container} from 'react-bootstrap';\r\n\r\nfunction App() {\r\n  return (\r\n    <Container fluid>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Routing}/>\r\n          <Route exact path=\"/:type/:category\" component={Routing}/>\r\n          <Route exact path=\"/register\"><Register path={{pathname:\"register\"}}/></Route>/>\r\n          <Route exact path=\"/signin\"><Register path={{pathname:\"signin\"}}/></Route>/>\r\n          <Route exact path=\"/:type\" component={Routing}/>\r\n        </Switch>\r\n    </Container>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionType from \"../actions/actionType\";\r\nimport { combineReducers } from \"redux\";\r\nimport {allDataProducts}  from  \"../services/serviceProduct\";\r\nimport {allDataUsers}  from  \"../services/serviceUser\";\r\n\r\n// Switch user \r\nconst reducer_user = async (state = allDataUsers(), action) => {\r\n    let newState;\r\n    switch(action.type){\r\n        case actionType.SHOW_USER:\r\n            newState = action.data;\r\n            return newState;\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\n//Switch product\r\nconst reducer_product = async (state = allDataProducts(), action) => {\r\n    let newState;\r\n    switch(action.type){\r\n        case actionType.SHOW_PRODUCT:\r\n            newState = action.data;\r\n            return newState;\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nconst reducer_cart = async (state = [], action) => {\r\n    let newState;\r\n    switch(action.type){\r\n        case actionType.SHOW_CART:\r\n            return state;\r\n        case actionType.ADD_CART:\r\n            newState = action.data;\r\n            return newState;\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\nconst userApp = combineReducers({\r\n    user: reducer_user,\r\n    product: reducer_product,\r\n    cart: reducer_cart\r\n})\r\n\r\n\r\n\r\nexport default userApp;","export const loadState = () => {\r\n    try {\r\n        \r\n        const serializedState = localStorage.getItem('state');\r\n        if(serializedState === null){\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedState);\r\n    }catch (err){\r\n        return undefined;\r\n    }\r\n}\r\n\r\n// Save the store and add in my state for get next time \r\n// with localstorage in my loadstate :)\r\nexport const saveState = async (state) => {\r\n    try{\r\n        let datas = {user: await state.user, product: await state.product, cart: await state.cart};\r\n        const serializedState = JSON.stringify(datas);\r\n        localStorage.setItem('state', serializedState)\r\n        \r\n    }catch(err){\r\n        \r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {createStore} from \"redux\";\r\nimport {Provider} from \"react-redux\"\r\nimport * as serviceWorker from './serviceWorker';\r\nimport userApp from \"./reducer/reducers\"\r\nimport {loadState, saveState} from \"../src/reducer/localStorage\"\r\nimport { BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nconst persistedState = loadState();\r\nconst store = createStore(userApp, persistedState);\r\n\r\nstore.subscribe(async () => {\r\n    saveState(store.getState());\r\n  });\r\n  \r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n  <Router>\r\n    <App />\r\n  </Router>\r\n</Provider>\r\n, \r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}