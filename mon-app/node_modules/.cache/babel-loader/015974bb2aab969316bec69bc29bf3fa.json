{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jumo\\\\Documents\\\\Project\\\\e-commerce\\\\mon-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\nimport reducer from \"./reducer/reducers\";\nreducer.subscribe(() => {\n  reducer.getState();\n});\nconst store = createStore(reducer); // const loadState = () => {\n//     try {\n//       const serializedState = localStorage.getItem('state');\n//       if(serializedState === null) {\n//         return undefined;\n//       }\n//       return JSON.parse(serializedState);\n//     } catch (e) {\n//       return undefined;\n//     }\n//   };\n// const saveState = (state) => {\n//     try {\n//       const serializedState = JSON.stringify(state);\n//       localStorage.setItem('state', serializedState);\n//     } catch (e) {\n//       // Ignore write errors;\n//     }\n//   };\n//   const peristedState = loadState();\n// store.subscribe(() => {\n//   saveState(store.getState());\n// });\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["C:/Users/Jumo/Documents/Project/e-commerce/mon-app/src/index.js"],"names":["React","ReactDOM","App","createStore","Provider","serviceWorker","reducer","subscribe","getState","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEAA,OAAO,CAACC,SAAR,CAAkB,MAAM;AACpBD,EAAAA,OAAO,CAACE,QAAR;AACD,CAFH;AAIA,MAAMC,KAAK,GAAGN,WAAW,CAACG,OAAD,CAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;AAIAL,QAAQ,CAACS,MAAT,CACA,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADA,EAKAE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALA,E,CAOA;AACA;AACA;;AACAP,aAAa,CAACQ,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore} from \"redux\";\nimport {Provider} from \"react-redux\"\nimport * as serviceWorker from './serviceWorker';\nimport reducer from \"./reducer/reducers\"\n\nreducer.subscribe(() => {\n    reducer.getState();\n  });\n  \nconst store = createStore(reducer);\n\n// const loadState = () => {\n//     try {\n//       const serializedState = localStorage.getItem('state');\n//       if(serializedState === null) {\n//         return undefined;\n//       }\n//       return JSON.parse(serializedState);\n//     } catch (e) {\n//       return undefined;\n//     }\n//   };\n\n// const saveState = (state) => {\n//     try {\n//       const serializedState = JSON.stringify(state);\n//       localStorage.setItem('state', serializedState);\n//     } catch (e) {\n//       // Ignore write errors;\n//     }\n//   };\n\n//   const peristedState = loadState();\n\n// store.subscribe(() => {\n//   saveState(store.getState());\n// });\n\n\n\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>\n, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}