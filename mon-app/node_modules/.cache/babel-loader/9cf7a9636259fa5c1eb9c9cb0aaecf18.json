{"ast":null,"code":"export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n\n    if (serializedState === null) {\n      return undefined;\n    }\n\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n}; // Save the store and add in my state for get next time \n// with localstorage in my loadstate :)\n\nexport const saveState = async state => {\n  try {\n    let datas = {\n      user: await state.user,\n      product: await state.product,\n      cart: await state.cart\n    };\n    const serializedState = JSON.stringify(datas);\n    localStorage.setItem('state', serializedState);\n  } catch (err) {}\n};","map":{"version":3,"sources":["C:/Users/Jumo/Documents/Project/React_project/e-commerce/mon-app/src/reducer/localStorage.js"],"names":["loadState","serializedState","localStorage","getItem","undefined","JSON","parse","err","saveState","state","datas","user","product","cart","stringify","setItem"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAM;AAC3B,MAAI;AAEA,UAAMC,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAxB;;AACA,QAAGF,eAAe,KAAK,IAAvB,EAA4B;AACxB,aAAOG,SAAP;AACH;;AACD,WAAOC,IAAI,CAACC,KAAL,CAAWL,eAAX,CAAP;AACH,GAPD,CAOC,OAAOM,GAAP,EAAW;AACR,WAAOH,SAAP;AACH;AACJ,CAXM,C,CAaP;AACA;;AACA,OAAO,MAAMI,SAAS,GAAG,MAAOC,KAAP,IAAiB;AACtC,MAAG;AACC,QAAIC,KAAK,GAAG;AAACC,MAAAA,IAAI,EAAE,MAAMF,KAAK,CAACE,IAAnB;AAAyBC,MAAAA,OAAO,EAAE,MAAMH,KAAK,CAACG,OAA9C;AAAuDC,MAAAA,IAAI,EAAE,MAAMJ,KAAK,CAACI;AAAzE,KAAZ;AACA,UAAMZ,eAAe,GAAGI,IAAI,CAACS,SAAL,CAAeJ,KAAf,CAAxB;AACAR,IAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8Bd,eAA9B;AAEH,GALD,CAKC,OAAMM,GAAN,EAAU,CAEV;AACJ,CATM","sourcesContent":["export const loadState = () => {\r\n    try {\r\n        \r\n        const serializedState = localStorage.getItem('state');\r\n        if(serializedState === null){\r\n            return undefined\r\n        }\r\n        return JSON.parse(serializedState);\r\n    }catch (err){\r\n        return undefined;\r\n    }\r\n}\r\n\r\n// Save the store and add in my state for get next time \r\n// with localstorage in my loadstate :)\r\nexport const saveState = async (state) => {\r\n    try{\r\n        let datas = {user: await state.user, product: await state.product, cart: await state.cart};\r\n        const serializedState = JSON.stringify(datas);\r\n        localStorage.setItem('state', serializedState)\r\n        \r\n    }catch(err){\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}