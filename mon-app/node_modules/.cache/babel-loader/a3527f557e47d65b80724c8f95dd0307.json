{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jumo\\\\Documents\\\\Project\\\\e-commerce\\\\mon-app\\\\src\\\\component\\\\Test.js\";\nimport React from \"react\";\nimport { Card, Button } from 'react-bootstrap';\nexport const List = async (data, endPoint) => {\n  if (endPoint.type === \"all\") {\n    displayAll(data, endPoint);\n  }\n\n  if (endPoint.type === \"filter\") {\n    alert(\"a\");\n  }\n\n  if (endPoint.type === \"article\") {\n    alert(\"b\");\n  }\n\n  if (endPoint.type === \"sort\") {\n    alert(\"c\");\n  } // let list = await data.map((value, index) => {\n  // if(endPoint.category === (undefined || \"all\")){\n  //     return (\n  //         <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\n  //             <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\n  //             <Card.Body>\n  //                 <Card.Title>{value.article}</Card.Title>\n  //                 <Card.Text>{value.price}$</Card.Text>\n  //                 <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\n  //                 <Button variant=\"primary\">Add cart</Button>\n  //             </Card.Body>\n  //         </Card>\n  //     ) \n  // }\n  // if(endPoint.category === value.category){\n  //     return (\n  //         <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\n  //             <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\n  //             <Card.Body>\n  //                 <Card.Title>{value.article}</Card.Title>\n  //                 <Card.Text>{value.price}$</Card.Text>\n  //                 <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\n  //                 <Button variant=\"primary\">Add cart</Button>\n  //             </Card.Body>\n  //         </Card>\n  //     ) \n  // }\n  // if(endPoint.category === value.article.toLowerCase()){\n  //     return (\n  //         <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\n  //             <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\n  //             <Card.Body>\n  //                 <Card.Title>{value.article}</Card.Title>\n  //                 <Card.Text>{value.price}$</Card.Text>\n  //                 <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\n  //                 <Button variant=\"primary\">Add cart</Button>\n  //             </Card.Body>\n  //         </Card>\n  //     ) \n  // }\n  // console.log(this.state.category);\n  // });\n  // if(endPoint == \"low\" || endPoint == \"high\"){\n  //     console.log(endPoint)\n  //     let dataSort = await data;\n  //     if(endPoint === \"low\" ) {dataSort = dataSort.sort((a, b) =>  a.price - b.price )} \n  //     if(endPoint === \"high\") {dataSort = dataSort.sort((a, b) =>  a.price - b.price ).reverse()}\n  //     let list = await dataSort.map((value, index) => {\n  //             return (\n  //                 <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\n  //                     <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\n  //                     <Card.Body>\n  //                         <Card.Title>{value.article}</Card.Title>\n  //                         <Card.Text>{value.price}$</Card.Text>\n  //                         <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\n  //                         <Button variant=\"primary\">Add cart</Button>\n  //                     </Card.Body>\n  //                 </Card>\n  //             ) \n  //     });\n  // }\n  // return list\n\n};\n\nasync function displayAll(data, endPoint) {\n  let list = await data.map((value, index) => {\n    if (endPoint.category === (undefined || \"all\")) {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"border border-secondary mt-3 mr-3\",\n        key: index,\n        style: {\n          width: '13em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        variant: \"pic\",\n        src: window.location.origin + \"/img/\" + value.photo,\n        style: {\n          width: \"auto\",\n          height: \"200px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }\n      }, value.article), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 29\n        }\n      }, value.price, \"$\"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 29\n        }\n      }, \"description: \", value.article, \" blablablablablablablablablalba\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }\n      }, \"Add cart\")));\n    }\n  });\n  return list;\n}\n\nasync function displayByCategory(data, endPoint) {\n  let list = await data.map((value, index) => {\n    if (endPoint.category === value.category) {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"border border-secondary mt-3 mr-3\",\n        key: index,\n        style: {\n          width: '13em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        variant: \"pic\",\n        src: window.location.origin + \"/img/\" + value.photo,\n        style: {\n          width: \"auto\",\n          height: \"200px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }\n      }, value.article), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }\n      }, value.price, \"$\"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }\n      }, \"description: \", value.article, \" blablablablablablablablablalba\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }\n      }, \"Add cart\")));\n    }\n  });\n  return list;\n}\n\nasync function displayByArticle(data, endPoint) {\n  let list = await data.map((value, index) => {\n    if (endPoint.category === value.article.toLowerCase()) {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: \"border border-secondary mt-3 mr-3\",\n        key: index,\n        style: {\n          width: '13em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        variant: \"pic\",\n        src: window.location.origin + \"/img/\" + value.photo,\n        style: {\n          width: \"auto\",\n          height: \"200px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }, value.article), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 29\n        }\n      }, value.price, \"$\"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 29\n        }\n      }, \"description: \", value.article, \" blablablablablablablablablalba\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 29\n        }\n      }, \"Add cart\")));\n    }\n  });\n  return list;\n}","map":{"version":3,"sources":["C:/Users/Jumo/Documents/Project/e-commerce/mon-app/src/component/Test.js"],"names":["React","Card","Button","List","data","endPoint","type","displayAll","alert","list","map","value","index","category","undefined","width","window","location","origin","photo","height","article","price","displayByCategory","displayByArticle","toLowerCase"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {Card, Button} from 'react-bootstrap';\r\n\r\nexport const List = async (data, endPoint) => {\r\n    if(endPoint.type === \"all\"){ displayAll(data, endPoint) }\r\n    if(endPoint.type === \"filter\"){alert(\"a\")}\r\n    if(endPoint.type === \"article\"){alert(\"b\")}\r\n    if(endPoint.type === \"sort\"){alert(\"c\")}\r\n\r\n    \r\n    // let list = await data.map((value, index) => {\r\n                // if(endPoint.category === (undefined || \"all\")){\r\n                //     return (\r\n                //         <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\r\n                //             <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n                //             <Card.Body>\r\n                //                 <Card.Title>{value.article}</Card.Title>\r\n                //                 <Card.Text>{value.price}$</Card.Text>\r\n                //                 <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\r\n                //                 <Button variant=\"primary\">Add cart</Button>\r\n                //             </Card.Body>\r\n                //         </Card>\r\n                //     ) \r\n                // }\r\n                // if(endPoint.category === value.category){\r\n                //     return (\r\n                //         <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\r\n                //             <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n                //             <Card.Body>\r\n                //                 <Card.Title>{value.article}</Card.Title>\r\n                //                 <Card.Text>{value.price}$</Card.Text>\r\n                //                 <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\r\n                //                 <Button variant=\"primary\">Add cart</Button>\r\n                //             </Card.Body>\r\n                //         </Card>\r\n                //     ) \r\n                // }\r\n                // if(endPoint.category === value.article.toLowerCase()){\r\n                //     return (\r\n                //         <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\r\n                //             <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n                //             <Card.Body>\r\n                //                 <Card.Title>{value.article}</Card.Title>\r\n                //                 <Card.Text>{value.price}$</Card.Text>\r\n                //                 <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\r\n                //                 <Button variant=\"primary\">Add cart</Button>\r\n                //             </Card.Body>\r\n                //         </Card>\r\n                //     ) \r\n                // }\r\n    \r\n                // console.log(this.state.category);\r\n                    \r\n            // });\r\n\r\n            // if(endPoint == \"low\" || endPoint == \"high\"){\r\n            //     console.log(endPoint)\r\n            //     let dataSort = await data;\r\n            //     if(endPoint === \"low\" ) {dataSort = dataSort.sort((a, b) =>  a.price - b.price )} \r\n            //     if(endPoint === \"high\") {dataSort = dataSort.sort((a, b) =>  a.price - b.price ).reverse()}\r\n            //     let list = await dataSort.map((value, index) => {\r\n            //             return (\r\n            //                 <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\r\n            //                     <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n            //                     <Card.Body>\r\n            //                         <Card.Title>{value.article}</Card.Title>\r\n            //                         <Card.Text>{value.price}$</Card.Text>\r\n            //                         <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\r\n            //                         <Button variant=\"primary\">Add cart</Button>\r\n            //                     </Card.Body>\r\n            //                 </Card>\r\n            //             ) \r\n                    \r\n                \r\n            //     });\r\n            // }\r\n            // return list\r\n}\r\n\r\nasync function displayAll(data, endPoint){\r\n    let list = await data.map((value, index) => {\r\n        if(endPoint.category === (undefined || \"all\")){\r\n                return (\r\n                    <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\r\n                        <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n                        <Card.Body>\r\n                            <Card.Title>{value.article}</Card.Title>\r\n                            <Card.Text>{value.price}$</Card.Text>\r\n                            <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\r\n                            <Button variant=\"primary\">Add cart</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )    \r\n            }\r\n        });\r\n\r\n        return list;\r\n}\r\n\r\nasync function displayByCategory(data, endPoint){\r\n    let list = await data.map((value, index) => {\r\n        if(endPoint.category === value.category){\r\n                return (\r\n                    <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\r\n                        <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n                        <Card.Body>\r\n                            <Card.Title>{value.article}</Card.Title>\r\n                            <Card.Text>{value.price}$</Card.Text>\r\n                            <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\r\n                            <Button variant=\"primary\">Add cart</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )    \r\n            }\r\n        });\r\n\r\n        return list\r\n}\r\n\r\nasync function displayByArticle(data, endPoint){\r\n    let list = await data.map((value, index) => {\r\n        if(endPoint.category === value.article.toLowerCase()){\r\n                return (\r\n                    <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\r\n                        <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n                        <Card.Body>\r\n                            <Card.Title>{value.article}</Card.Title>\r\n                            <Card.Text>{value.price}$</Card.Text>\r\n                            <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\r\n                            <Button variant=\"primary\">Add cart</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                )    \r\n            }\r\n        });\r\n\r\n        return list;\r\n}"]},"metadata":{},"sourceType":"module"}