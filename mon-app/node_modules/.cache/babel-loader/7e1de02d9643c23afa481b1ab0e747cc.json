{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jumo\\\\Documents\\\\Project\\\\e-commerce\\\\mon-app\\\\src\\\\component\\\\Accueil.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../style/Acceuil.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport Header from \"./Header\";\nimport Filter from \"./Filter\";\nimport { List } from \"./Test\";\n\nclass Accueil extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      list: [],\n      category: \"\",\n      sortArray: [\"low\", \"high\"],\n      test: []\n    }; // this.listData = this.listData.bind(this);\n  }\n\n  async componentDidMount() {\n    let products = await this.props.products; // this.show(this.props.category);\n\n    var test = await List(products, this.props.params.category);\n    this.setState({\n      data: products,\n      test: test\n    });\n  }\n\n  async componentWillReceiveProps(nextProps) {\n    console.log((await nextProps.params)); // this.show(nextProps.category);\n\n    var test = await List(this.state.data, nextProps.params.category);\n    this.setState({\n      test: test\n    });\n  }\n\n  async show(endPoint) {\n    if (endPoint === \"default\") {\n      this.listSortData(endPoint);\n    } else if (endPoint === \"low\") {\n      this.listSortData(endPoint);\n    } else if (endPoint === \"high\") {\n      this.listSortData(endPoint);\n    } else {\n      this.listData(endPoint);\n    }\n  }\n\n  async listSortData(sortChoice) {} // let dataSort = await this.state.data;\n  // let sort = await this.state.data.sort((a, b) =>  a.price - b.price );\n  // if(sortChoice === \"low\" ) {dataSort = sort} \n  // if(sortChoice === \"high\") {dataSort = sort.reverse()}\n  // let list = await dataSort.map((value, index) => {\n  //         return (\n  //             <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\n  //                 <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\n  //                 <Card.Body>\n  //                     <Card.Title>{value.article}</Card.Title>\n  //                     <Card.Text>{value.price}$</Card.Text>\n  //                     <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\n  //                     <Button variant=\"primary\">Add cart</Button>\n  //                 </Card.Body>\n  //             </Card>\n  //         ) \n  // });\n  // this.setState({list: list})\n  // async listData(endPoint) {\n  //     let list = await this.state.data.map((value, index) => {\n  //         if(endPoint === (undefined || \"all\")){\n  //             return (\n  //                 <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\n  //                     <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\n  //                     <Card.Body>\n  //                         <Card.Title>{value.article}</Card.Title>\n  //                         <Card.Text>{value.price}$</Card.Text>\n  //                         <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\n  //                         <Button variant=\"primary\">Add cart</Button>\n  //                     </Card.Body>\n  //                 </Card>\n  //             ) \n  //         }\n  //         if(endPoint === value.category){\n  //             console.log(endPoint)\n  //             return (\n  //                 <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\n  //                     <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\n  //                     <Card.Body>\n  //                         <Card.Title>{value.article}</Card.Title>\n  //                         <Card.Text>{value.price}$</Card.Text>\n  //                         <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\n  //                         <Button variant=\"primary\">Add cart</Button>\n  //                     </Card.Body>\n  //                 </Card>\n  //             ) \n  //         }\n  //         if(endPoint === value.article.toLowerCase()){\n  //             return (\n  //                 <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\n  //                     <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\n  //                     <Card.Body>\n  //                         <Card.Title>{value.article}</Card.Title>\n  //                         <Card.Text>{value.price}$</Card.Text>\n  //                         <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\n  //                         <Button variant=\"primary\">Add cart</Button>\n  //                     </Card.Body>\n  //                 </Card>\n  //             ) \n  //         }\n  //         // console.log(this.state.category);\n  //     });\n  //     this.setState({ list: list })\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xs: \"2\",\n      sm: \"2\",\n      md: \"3\",\n      lg: \"2\",\n      className: \"border border-secondary mt-3 ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Filter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 104\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 30\n      }\n    }, this.state.test)))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.product\n  };\n};\n\nexport default connect(mapStateToProps, null)(Accueil);","map":{"version":3,"sources":["C:/Users/Jumo/Documents/Project/e-commerce/mon-app/src/component/Accueil.js"],"names":["React","connect","Container","Row","Col","Card","Button","Header","Filter","List","Accueil","Component","constructor","props","state","data","list","category","sortArray","test","componentDidMount","products","params","setState","componentWillReceiveProps","nextProps","console","log","show","endPoint","listSortData","listData","sortChoice","render","mapStateToProps","product"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../style/Acceuil.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport {Container, Row, Col, Card, Button} from 'react-bootstrap';\r\nimport Header from \"./Header\";\r\nimport Filter from \"./Filter\";\r\nimport {List}from \"./Test\";\r\n\r\n\r\nclass Accueil extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            list: [],\r\n            category: \"\",\r\n            sortArray:[\"low\", \"high\"],\r\n            test: []\r\n        }\r\n\r\n        // this.listData = this.listData.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let products = await this.props.products;\r\n        // this.show(this.props.category);\r\n        var test = await List(products, this.props.params.category);\r\n        this.setState({data: products, test: test});\r\n    }\r\n\r\n    async componentWillReceiveProps(nextProps) {\r\n        console.log(await nextProps.params);\r\n        // this.show(nextProps.category);\r\n        \r\n        var test = await List(this.state.data, nextProps.params.category);\r\n        this.setState({test: test});\r\n    }\r\n\r\n    async show(endPoint){\r\n\r\n        if(endPoint === \"default\"){\r\n            this.listSortData(endPoint);\r\n        }\r\n        else if(endPoint === \"low\"){\r\n            this.listSortData(endPoint);\r\n        }\r\n        else if(endPoint === \"high\"){\r\n            this.listSortData(endPoint);\r\n        }\r\n        else{\r\n            this.listData(endPoint);\r\n        }\r\n    }\r\n\r\n    async listSortData(sortChoice){\r\n        // let dataSort = await this.state.data;\r\n        // let sort = await this.state.data.sort((a, b) =>  a.price - b.price );\r\n        // if(sortChoice === \"low\" ) {dataSort = sort} \r\n        // if(sortChoice === \"high\") {dataSort = sort.reverse()}\r\n        // let list = await dataSort.map((value, index) => {\r\n        //         return (\r\n        //             <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\r\n        //                 <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n        //                 <Card.Body>\r\n        //                     <Card.Title>{value.article}</Card.Title>\r\n        //                     <Card.Text>{value.price}$</Card.Text>\r\n        //                     <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\r\n        //                     <Button variant=\"primary\">Add cart</Button>\r\n        //                 </Card.Body>\r\n        //             </Card>\r\n        //         ) \r\n            \r\n        \r\n        // });\r\n        // this.setState({list: list})\r\n    }\r\n\r\n    // async listData(endPoint) {\r\n    \r\n    //     let list = await this.state.data.map((value, index) => {\r\n    //         if(endPoint === (undefined || \"all\")){\r\n    //             return (\r\n    //                 <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\r\n    //                     <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n    //                     <Card.Body>\r\n    //                         <Card.Title>{value.article}</Card.Title>\r\n    //                         <Card.Text>{value.price}$</Card.Text>\r\n    //                         <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\r\n    //                         <Button variant=\"primary\">Add cart</Button>\r\n    //                     </Card.Body>\r\n    //                 </Card>\r\n    //             ) \r\n    //         }\r\n    //         if(endPoint === value.category){\r\n    //             console.log(endPoint)\r\n    //             return (\r\n    //                 <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\r\n    //                     <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n    //                     <Card.Body>\r\n    //                         <Card.Title>{value.article}</Card.Title>\r\n    //                         <Card.Text>{value.price}$</Card.Text>\r\n    //                         <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\r\n    //                         <Button variant=\"primary\">Add cart</Button>\r\n    //                     </Card.Body>\r\n    //                 </Card>\r\n    //             ) \r\n    //         }\r\n    //         if(endPoint === value.article.toLowerCase()){\r\n    //             return (\r\n    //                 <Card className=\"border border-secondary mt-3 mr-3\" key={index} style={{ width: '13em' }}>\r\n    //                     <Card.Img variant=\"pic\" src={window.location.origin + \"/img/\" + value.photo}  style={{ width: \"auto\", height: \"200px\" }}/>\r\n    //                     <Card.Body>\r\n    //                         <Card.Title>{value.article}</Card.Title>\r\n    //                         <Card.Text>{value.price}$</Card.Text>\r\n    //                         <Card.Text>description: {value.article} blablablablablablablablablalba</Card.Text>\r\n    //                         <Button variant=\"primary\">Add cart</Button>\r\n    //                     </Card.Body>\r\n    //                 </Card>\r\n    //             ) \r\n    //         }\r\n\r\n    //         // console.log(this.state.category);\r\n                \r\n    //     });\r\n    //     this.setState({ list: list })\r\n    // }\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col xs=\"2\" sm=\"2\" md=\"3\" lg=\"2\" className=\"border border-secondary mt-3 ml-3\"><Filter/></Col>\r\n                        {/* <Col><div className=\"flex\">{this.state.list}</div></Col> */}\r\n                        <Col><div className=\"flex\">{this.state.test}</div></Col>\r\n\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.product\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(Accueil);"]},"metadata":{},"sourceType":"module"}