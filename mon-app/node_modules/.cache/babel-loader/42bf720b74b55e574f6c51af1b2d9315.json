{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jumo\\\\Documents\\\\Project\\\\React_project\\\\e-commerce\\\\mon-app\\\\src\\\\component\\\\Filter.js\";\nimport React from \"react\";\nimport { Form, ListGroup, Navbar } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Filter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      list: [],\n      activeCategory: false\n    };\n    this.activeCategory = this.activeCategory.bind(this);\n    this.sortBy = this.sortBy.bind(this);\n  }\n\n  async componentDidMount() {\n    let products = await this.props.products;\n    this.setState({\n      data: products\n    });\n    this.categoryFilter();\n    localStorage.setItem('categoryFilter', \"all\");\n  }\n\n  async categoryFilter() {\n    let arrayCheckIfExist = [];\n    let count = 0;\n    let data = await this.state.data;\n\n    for (var l = 0; l < data.length; l++) {\n      arrayCheckIfExist.push(data[l].category);\n    } //Use loops for check the duplicate\n\n\n    for (var z = 0; z < data.length; z++) {\n      for (var i = 0; i < arrayCheckIfExist.length; i++) {\n        //check if the category in the new array, and nor undefined\n        // if(data[z].category !== arrayCheckIfExist[i] && data[z].category !== undefined  && count === 0){\n        //     if(data[z].category !== \"\"){\n        //         arrayCheckIfExist.push(data[z].category);\n        //     }\n        // }\n        if (data[z].category === arrayCheckIfExist[i]) {\n          if (data[z].category !== undefined && count >= 1) {\n            arrayCheckIfExist.splice(i, 1); // arrayCheckIfExist.push(data[z].category);\n          }\n\n          console.log(arrayCheckIfExist);\n          console.log(data[z].category + \" : \" + count);\n          count++;\n        }\n      }\n\n      count = 0;\n    } //loop category for card \n\n\n    let list = arrayCheckIfExist.map((category, index) => {\n      return /*#__PURE__*/React.createElement(ListGroup.Item, {\n        action: true,\n        onClick: () => {\n          this.activeCategory(category);\n        },\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, \" \", category);\n    });\n    this.setState({\n      list: list\n    });\n  } //Function send to new route with new params\n\n\n  async activeCategory(category) {\n    localStorage.removeItem('categoryFilter');\n    localStorage.setItem('categoryFilter', category);\n    this.props.history.push(`/filter/${category}`);\n  } //Function send to new route the sort of items\n\n\n  sortBy(e) {\n    let find = e.target.value;\n    this.props.history.push(`/sort/${find}`);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"Filter\"), /*#__PURE__*/React.createElement(Form.Control, {\n      onClick: this.sortBy,\n      as: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, \"default\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, \"low\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"high\")))), /*#__PURE__*/React.createElement(ListGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n      action: true,\n      onClick: () => {\n        this.activeCategory('all');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \" Tout\"), this.state.list));\n  }\n\n} //Get state in the store\n\n\nconst mapStateToProps = state => {\n  return {\n    products: state.product\n  };\n};\n\nexport default connect(mapStateToProps, null)(withRouter(Filter));","map":{"version":3,"sources":["C:/Users/Jumo/Documents/Project/React_project/e-commerce/mon-app/src/component/Filter.js"],"names":["React","Form","ListGroup","Navbar","connect","withRouter","Filter","Component","constructor","props","state","data","list","activeCategory","bind","sortBy","componentDidMount","products","setState","categoryFilter","localStorage","setItem","arrayCheckIfExist","count","l","length","push","category","z","i","undefined","splice","console","log","map","index","removeItem","history","e","find","target","value","render","mapStateToProps","product"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, ListGroup, Navbar } from \"react-bootstrap\"\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass Filter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            list: [],\r\n            activeCategory: false\r\n        }\r\n\r\n        this.activeCategory = this.activeCategory.bind(this);\r\n        this.sortBy = this.sortBy.bind(this);\r\n    }\r\n\r\n    async componentDidMount(){\r\n       let products = await this.props.products;\r\n       this.setState({data: products});\r\n       this.categoryFilter();\r\n       localStorage.setItem('categoryFilter', \"all\");\r\n    }\r\n\r\n    async categoryFilter(){\r\n        let arrayCheckIfExist = [];\r\n        let count = 0;\r\n        let data = await this.state.data;\r\n\r\n        for(var l = 0; l < data.length; l++){\r\n            arrayCheckIfExist.push(data[l].category)\r\n        }\r\n\r\n        //Use loops for check the duplicate\r\n         for(var z = 0; z < data.length; z++){\r\n            for(var i = 0; i <arrayCheckIfExist.length; i++){\r\n                //check if the category in the new array, and nor undefined\r\n                // if(data[z].category !== arrayCheckIfExist[i] && data[z].category !== undefined  && count === 0){\r\n                //     if(data[z].category !== \"\"){\r\n                //         arrayCheckIfExist.push(data[z].category);\r\n                //     }\r\n                    \r\n                // }\r\n                if(data[z].category === arrayCheckIfExist[i]){\r\n                    if(data[z].category !== undefined  && count >= 1){\r\n                            arrayCheckIfExist.splice(i,1);\r\n                            // arrayCheckIfExist.push(data[z].category);\r\n                            \r\n                        }\r\n                        console.log(arrayCheckIfExist)\r\n                        console.log(data[z].category + \" : \" + count)\r\n                        count++\r\n                    }\r\n                    \r\n\r\n                \r\n            }\r\n            count = 0\r\n        }\r\n        \r\n        //loop category for card \r\n       let list =  arrayCheckIfExist.map((category, index) =>{\r\n            return (\r\n                <ListGroup.Item action onClick={() => {this.activeCategory(category);}} key={index}> {category}</ListGroup.Item>\r\n            );\r\n       })\r\n            \r\n        this.setState({list: list})\r\n    }\r\n\r\n    //Function send to new route with new params\r\n    async activeCategory(category){\r\n        localStorage.removeItem('categoryFilter');\r\n        localStorage.setItem('categoryFilter', category);\r\n        this.props.history.push(`/filter/${category}`)\r\n    }\r\n\r\n    //Function send to new route the sort of items\r\n    sortBy(e){\r\n        let find = e.target.value;\r\n        this.props.history.push(`/sort/${find}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <Form className=\"mt-3\">\r\n                <Form.Group controlId=\"exampleForm.ControlSelect2\">\r\n                    <Form.Label>Filter</Form.Label>\r\n                    <Form.Control onClick={this.sortBy} as=\"select\">\r\n                        <option>default</option>\r\n                        <option>low</option>\r\n                        <option>high</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Form>\r\n            \r\n                <ListGroup>\r\n\r\n                    <ListGroup.Item action onClick={() => {this.activeCategory('all');}}> Tout</ListGroup.Item>\r\n                    {this.state.list}\r\n                </ListGroup>\r\n            \r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\n//Get state in the store\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.product\r\n    }\r\n}\r\nexport default connect(mapStateToProps, null)(withRouter(Filter));"]},"metadata":{},"sourceType":"module"}