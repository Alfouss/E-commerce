{"ast":null,"code":"import * as actionType from \"../actions/actionType\";\nimport { combineReducers } from \"redux\";\nimport { allDataProducts } from \"../services/serviceProduct\";\nimport { allDataUsers } from \"../services/serviceUser\";\n\nlet getData = () => {\n  let users = allDataUsers();\n  let products = allDataProducts();\n  let object = {\n    users: users,\n    products: products\n  };\n  return object;\n}; // Switch user \n\n\nconst reducer_user = async (state = getData.users, action) => {\n  let newState;\n  console.log(state);\n\n  switch (action.type) {\n    case actionType.SHOW_USER:\n      newState = action.data;\n      return newState;\n\n    default:\n      return state;\n  }\n}; //Switch product\n\n\nconst reducer_product = async (state = allDataProducts().data, action) => {\n  let newState;\n\n  switch (action.type) {\n    case actionType.SHOW_PRODUCT:\n      newState = action.data;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nconst reducer_cart = async (state = [], action) => {\n  let newState;\n\n  switch (action.type) {\n    case actionType.SHOW_CART:\n      return state;\n\n    case actionType.ADD_CART:\n      newState = action.data;\n      return newState;\n\n    case actionType.DELETE_CART:\n      newState = action.data;\n      return newState;\n\n    default:\n      return state;\n  }\n};\n\nconst userApp = combineReducers({\n  user: reducer_user,\n  product: reducer_product,\n  cart: reducer_cart\n});\nexport default userApp;","map":{"version":3,"sources":["C:/Users/Jumo/Documents/Project/React_project/e-commerce/mon-app/src/reducer/reducers.js"],"names":["actionType","combineReducers","allDataProducts","allDataUsers","getData","users","products","object","reducer_user","state","action","newState","console","log","type","SHOW_USER","data","reducer_product","SHOW_PRODUCT","reducer_cart","SHOW_CART","ADD_CART","DELETE_CART","userApp","user","product","cart"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,uBAA5B;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAAQC,eAAR,QAAgC,4BAAhC;AACA,SAAQC,YAAR,QAA6B,yBAA7B;;AAEA,IAAIC,OAAO,GAAG,MAAM;AAEhB,MAAIC,KAAK,GAAGF,YAAY,EAAxB;AACA,MAAIG,QAAQ,GAAGJ,eAAe,EAA9B;AACA,MAAIK,MAAM,GAAG;AAACF,IAAAA,KAAK,EAAEA,KAAR;AAAeC,IAAAA,QAAQ,EAAEA;AAAzB,GAAb;AACA,SAAOC,MAAP;AACH,CAND,C,CAQA;;;AACA,MAAMC,YAAY,GAAG,OAAOC,KAAK,GAAGL,OAAO,CAACC,KAAvB,EAA8BK,MAA9B,KAAyC;AAC1D,MAAIC,QAAJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;;AACA,UAAOC,MAAM,CAACI,IAAd;AACI,SAAKd,UAAU,CAACe,SAAhB;AACIJ,MAAAA,QAAQ,GAAGD,MAAM,CAACM,IAAlB;AACA,aAAOL,QAAP;;AACJ;AACA,aAAOF,KAAP;AALJ;AAOH,CAVD,C,CAYA;;;AACA,MAAMQ,eAAe,GAAG,OAAOR,KAAK,GAAGP,eAAe,GAAGc,IAAjC,EAAuCN,MAAvC,KAAkD;AACtE,MAAIC,QAAJ;;AACA,UAAOD,MAAM,CAACI,IAAd;AACI,SAAKd,UAAU,CAACkB,YAAhB;AACIP,MAAAA,QAAQ,GAAGD,MAAM,CAACM,IAAlB;AACA,aAAOL,QAAP;;AACJ;AACA,aAAOF,KAAP;AALJ;AAOH,CATD;;AAWA,MAAMU,YAAY,GAAG,OAAOV,KAAK,GAAG,EAAf,EAAmBC,MAAnB,KAA8B;AAC/C,MAAIC,QAAJ;;AACA,UAAOD,MAAM,CAACI,IAAd;AACI,SAAKd,UAAU,CAACoB,SAAhB;AACI,aAAOX,KAAP;;AACJ,SAAKT,UAAU,CAACqB,QAAhB;AACIV,MAAAA,QAAQ,GAAGD,MAAM,CAACM,IAAlB;AACA,aAAOL,QAAP;;AACJ,SAAKX,UAAU,CAACsB,WAAhB;AACIX,MAAAA,QAAQ,GAAGD,MAAM,CAACM,IAAlB;AACJ,aAAOL,QAAP;;AACA;AACA,aAAOF,KAAP;AAVJ;AAYH,CAdD;;AAkBA,MAAMc,OAAO,GAAGtB,eAAe,CAAC;AAC5BuB,EAAAA,IAAI,EAAEhB,YADsB;AAE5BiB,EAAAA,OAAO,EAAER,eAFmB;AAG5BS,EAAAA,IAAI,EAAEP;AAHsB,CAAD,CAA/B;AAQA,eAAeI,OAAf","sourcesContent":["import * as actionType from \"../actions/actionType\";\r\nimport { combineReducers } from \"redux\";\r\nimport {allDataProducts}  from  \"../services/serviceProduct\";\r\nimport {allDataUsers}  from  \"../services/serviceUser\";\r\n\r\nlet getData = () => {\r\n    \r\n    let users = allDataUsers();\r\n    let products = allDataProducts();\r\n    let object = {users: users, products: products};\r\n    return object;\r\n}\r\n\r\n// Switch user \r\nconst reducer_user = async (state = getData.users, action) => {\r\n    let newState;\r\n    console.log(state)\r\n    switch(action.type){\r\n        case actionType.SHOW_USER:\r\n            newState = action.data;\r\n            return newState;\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\n//Switch product\r\nconst reducer_product = async (state = allDataProducts().data, action) => {\r\n    let newState;\r\n    switch(action.type){\r\n        case actionType.SHOW_PRODUCT:\r\n            newState = action.data;\r\n            return newState;\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\nconst reducer_cart = async (state = [], action) => {\r\n    let newState;\r\n    switch(action.type){\r\n        case actionType.SHOW_CART:\r\n            return state;\r\n        case actionType.ADD_CART:\r\n            newState = action.data;\r\n            return newState;\r\n        case actionType.DELETE_CART:\r\n            newState = action.data;\r\n        return newState;\r\n        default:\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst userApp = combineReducers({\r\n    user: reducer_user,\r\n    product: reducer_product,\r\n    cart: reducer_cart\r\n})\r\n\r\n\r\n\r\nexport default userApp;"]},"metadata":{},"sourceType":"module"}